;=======================
; Convenience functions
;=======================

;Sort a list of lists, on an element of a sublist
to-report sort-with [ key lst ]
  report sort-by [ [a b] -> (runresult key a) < (runresult key b) ] lst
end


; Warnings can not be supressed, and are presented in the output window.
; Useful for things the use must know, such as conditions that should never occur, etc.
to warning [string]
  output-print "=================================="
  output-print word "Warning ! " string
  output-print "=================================="
end

; When running in verbose mode, output is generated in the output window, for nonesential information for the user
; Useful for tracking what the model is doing, can be turned on/off
to say [string]
  if verbose? [
    output-print string
  ]
end

;debug is presented in the command output and is used for debug information, prints to the console
;Messages that are only useful when fixing bugs
to debug [string]
  if debug? [
    print string
  ]
end


to setupMap
  ;~~~~~choose the plan you want to use
  ;; MAKE SURE THE BMP FILES ARE IN THE SAME FOLDER WHERE YOU SAVE YOUR MODEL YOU CAN MAKE CHANGES USING THE BUCKET TOOL IN PAINT TO MAKE THE FLOORPLAN AS COMPLEX OR SIMPLE AS YOU WANT
  ;coloured floorplan has exits/entrances in red, internal stairwells in yellow, elevators in gray, doors in cyan, toilets in green and kitchen counters and reception in lila
  ;import-pcolors "data/coloured_plan.png"
  
  ; simplified floorplan only has the exits in red, walls in black
  import-pcolors "data/coloured_plan.png"
  
  clean-colors
end


to clean-colors
  ;recolor pathces that recieved a scaled color due to image editing
  ask patch 169 139 [set pcolor 0]
  ask patches [
    if pcolor > 65 and pcolor < 70  [
      set pcolor black
       
    ]
    if pcolor = 79.3 [set pcolor 84.5]
    if pcolor > 8 and pcolor < 9.9 [
      set pcolor white
    ]
    
    ;if pcolor = 84.5 [set pcolor black]
    
    if pcolor <= 4.2 [set pcolor 0]
    if pcolor >= 4.8 and pcolor <= 4.9 [set pcolor 0]
    
    if pcolor <= 132.2 and pcolor >= 131 [set pcolor 0]
    if pcolor <= 23 and pcolor >= 20.5 [set pcolor 0]
    if pcolor <= 42 and pcolor >= 40 [set pcolor 0]
    if pcolor <= 32.3 and pcolor >= 30.8 [set pcolor 0]
    ;if pcolor <= 34.2 and pcolor >= 33.4 [set pcolor 0]
    if pcolor <= 123 and pcolor >= 119 [set pcolor 0]
  ]
  
  
end

;utility to check how many unique colow we have
to-report check-colors
  set all-colors []
  ask patches [
   set all-colors lput [pcolor] of self all-colors 
   ;print pcolor
  ]
  
  report remove-duplicates all-colors
end